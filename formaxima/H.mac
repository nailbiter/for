/*play with Gegenbauer poly's*/
texoutput : ".texput.tex"$
texput(mylambda,"\\lambda")$
texput(nu,"\\nu")$
texput(lambdatilde,"\\tilde{\\lambda}")$
texput(G,"\\Gamma")$
poch(x,n):=product(x+i,i,0,n-1);
/*tex(%,texoutput);*/

/*a[0]*(1-x^2)^2+a[1]*(1-y^2)*(1-x^2)+a[2]*(1-y^2)^2;
expand(%);
collect
tex(%,texoutput);*/

/*b:0;
P2(x):=x*(x+1);
a[0]:(mylambda-nu+N)/2;/*j+i*/
a[1]:(1+mylambda-p-q+nu+N)/2;/*j*/
a[2]:(mylambda+nu-q+N)/2;/*j+i*/
a[3]:(mylambda+N)/2;/*j+i*/
a[4]:(1+mylambda-q+N)/2;/*j+i*/
a[5]:(mylambda+nu-q+N)/2;/*j*/

denom:(P2(a[3])*P2(a[4])*P2(a[5]));
(-p*a[0]*a[2]/a[3]/a[4])*denom+(p-1)*denom+16*P2(a[0])*P2(a[1])*P2(a[2])/P2(a[3])/P2(a[4])/P2(a[5])*denom;
expr:expand(%);
for i:0 thru 6 do tex(coeff(expr,N,i),texoutput);*/

P2(x):=x;
a[0]:(mylambda-nu+N)/2;/*j+i*/
a[1]:(1+mylambda-p-q+nu+N)/2;/*j*/
a[2]:(mylambda+nu-q+N)/2;/*j+i*/
a[3]:(b+mylambda+N)/2;/*j+i*/
a[4]:(-b+1+mylambda-q+N)/2;/*j+i*/
a[5]:(mylambda+nu-q+N)/2;/*j*/

(-p*a[0]*a[2]/a[3]/a[4])+(p-1)+P2(a[0])*P2(a[1])*P2(a[2])/P2(a[3])/P2(a[4])/P2(a[5]);
factor(%);
tex(%,texoutput);

myxdegree(expr):=x*diff(expr,x)/expr;
mycoeff(expr):=substitute([x=1,y=1],expr);
myydegree(expr):=y*diff(expr,y)/expr;
F(i,j):=poch(a[0],i+j)*poch(a[1],j)*poch(a[2],i+j)/poch(a[3],i+j)/poch(a[4],i+j)/poch(a[5],j);

1/3*(p/2-1)*(p/2+1)*(p/2+2)*p*X^4-(p/2-1)*(p/2+1)*p*X^2+1/4*(p/2-1)*p;
substitute(X=sqrt(1-x)/sqrt(1-y),%);
map(lambda([e],e*(1-y)^2),%);
expand(%);
map(lambda([e],mycoeff(e)*F(myxdegree(e),myydegree(e))),%);
factor(%);
tex(%,texoutput);

1-a[0]*a[2]/a[3]/a[4];
factor(%);
tex(%,texoutput);

(1-x)*(1-y);expand(%);
map(lambda([e],mycoeff(e)*F(myxdegree(e),myydegree(e))),%);
factor(%);
tex(%,texoutput);
