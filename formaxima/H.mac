/*play with Gegenbauer poly's*/
texoutput : ".texput.tex"$
texput(mylambda,"\\lambda")$
texput(nu,"\\nu")$
texput(lambdatilde,"\\tilde{\\lambda}")$
texput(G,"\\Gamma")$
/*tex(%,texoutput);*/

/*a[0]*(1-x^2)^2+a[1]*(1-y^2)*(1-x^2)+a[2]*(1-y^2)^2;
expand(%);
collect
tex(%,texoutput);*/

/*b:0;
P2(x):=x*(x+1);
a[0]:(mylambda-nu+N)/2;/*j+i*/
a[1]:(1+mylambda-p-q+nu+N)/2;/*j*/
a[2]:(mylambda+nu-q+N)/2;/*j+i*/
a[3]:(mylambda+N)/2;/*j+i*/
a[4]:(1+mylambda-q+N)/2;/*j+i*/
a[5]:(mylambda+nu-q+N)/2;/*j*/

denom:(P2(a[3])*P2(a[4])*P2(a[5]));
(-p*a[0]*a[2]/a[3]/a[4])*denom+(p-1)*denom+16*P2(a[0])*P2(a[1])*P2(a[2])/P2(a[3])/P2(a[4])/P2(a[5])*denom;
expr:expand(%);
for i:0 thru 6 do tex(coeff(expr,N,i),texoutput);*/

b:0;
N:0;/*fixme*/
P2(x):=x*(x+1);
a[0]:(mylambda-nu+N)/2;/*j+i*/
a[1]:(1+mylambda-p-q+nu+N)/2;/*j*/
a[2]:(mylambda+nu-q+N)/2;/*j+i*/
a[3]:(mylambda+N)/2;/*j+i*/
a[4]:(1+mylambda-q+N)/2;/*j+i*/
a[5]:(mylambda+nu-q+N)/2;/*j*/

denom:(mylambda/2+1)*mylambda*((1+mylambda-q)/2+1)*(-q+mylambda+1);
(-p*a[0]*a[2]/a[3]/a[4])*denom+(p-1)*denom+16*P2(a[0])*P2(a[1])*P2(a[2])/P2(a[3])/P2(a[4])/P2(a[5])*denom;
tex(%,texoutput);
