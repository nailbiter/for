texoutput : ".texput.tex"$
texput(mylambda,"\\lambda")$
texput(nu,"\\nu")$
texput(lambdatilde,"\\tilde{\\lambda}")$
texput(G,"\\Gamma")$
texput(Pi,"\\Pi")$
/*tex(%,texoutput);*/
/*set_tex_environment_default("\\begin{dmath*}","\\end{dmath*}");*/

load("master_common.mac");

A:(mylambda+nu-q+N)/2-1;
B:(q-2)/2;
poch(x,n):=product(x+i,i,0,n-1);
myxdegree(expr):=x*diff(expr,x)/expr;
mycoeff(expr):=substitute([x=1,y=1],expr);
myydegree(expr):=y*diff(expr,y)/expr;
F(i):=poch(A+1,i)*poch(B+A-nu+2,i)/poch(A-nu/2+3/2,i)/poch(B+A-nu/2+2,i);
norm:G(a[0])*G(a[1])*G(a[2])/G(a[3])/G(a[4])/G(a[5]);
myplus(a,b):=G(a+b);
mymap(poly):=factor(map(lambda([e],mycoeff(e)*F(myxdegree(e))),expand(poly)));

G(q/2)*G((1-nu)/2)*G((mylambda-nu)/2)*G((mylambda+nu-q)/2)/G(mylambda/2)/G((mylambda+1-q)/2)/G((q-nu+1)/2);
load(facexp)$
a:2;
tex(a,texoutput);
expand(factor(ultraspherical(a,(p-1)/2+N,sqrt(1-x))));
mymap(%);
tex(%,texoutput);

/*kill(a);
ruls:solve([(p-1)/2+a=x0,(mylambda-nu)/2=x1,(mylambda+nu-p-q+1)/2=x2,(1+a-b+mylambda-q)/2=x3],[p,q,mylambda,nu,a,b]);
tex(ruls,texoutput);
tex(expand(substitute(ruls,(a+b+mylambda)/2)),texoutput);

substitute([a1=-N/2,a2=N/2+(p-1)/2+a,a3=(mylambda-nu)/2,a4=(mylambda+nu-p-q+1),b1=1/2,b2=(1+a-b+mylambda-q)/2,b3=(a+b+mylambda)/2],[b3-a1-a4-1,b2-a1-a3-1,a1+a2-b1-1,b3-a2-a3-1,b2-a2-a4-1,a3+a4-b1-1]/2);
expand(%);
tex(%,texoutput);*/

kill(A,B,q,nu,mylambda,a);
G(q/2)*G((1-nu)/2)*G((mylambda-nu)/2)*G((mylambda+nu-q)/2)/G(mylambda/2)/G((mylambda+1-q)/2)/G((q-nu+1)/2);
substitute(solve([A=(q-2)/2,B=(mylambda+nu-q)/2-1],[mylambda,q]),%);
substitute((2+2*B)/2=1+B,%);
substitute((2+2*A)/2=1+A,%);
substitute((4-2*nu+2*A+2*B)/2=2-nu+A+B,%);
substitute([nu=n+a+b-mylambda,A=(q-2+2*a)/2,B=(p-2+2*b)/2],%);
factor(%);
substitute(n=p+q,%);
expand(%);factor(%);
substitute([q+p-mylambda+b+a-1=n-mylambda+b+a-1,q+p-2*mylambda=n-2*mylambda],%);
tex(%,texoutput);

myexpr(-(mylambda-n-a-b),(q-2+2*a)/2,(p-2+2*b)/2);
expand(%);factor(%);
%/G((2*b+p)/2);
%/G((2*a+q)/2);
substitute(2*mylambda-2*n+p+q=2*mylambda-n,%);
substitute(a+b+mylambda-n+p+q=a+b+mylambda,%);
%*G(n-mylambda+a+b)/G(n-mylambda);
tex(%,texoutput);
